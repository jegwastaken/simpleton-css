{"version":3,"sources":["_gen.scss","docs.css","../../scss/_mixins.scss","../../scss/_funcs.scss","../../scss/_vars.scss","_prism.scss"],"names":[],"mappings":"AAAA;EACI,sBAAgB;ACCpB;;ACkHQ;EACI,gBAAe;AD/G3B;;ADYA;EAbI,2BGuT4D;EHtT5D,0BGsT4D;EHvS5D,aAAY;EACZ,sBAAqB;EACrB,cAAa;EACb,iBAAgB;EAChB,gBAA8B;EAA9B,+BAA8B;EAC9B,WAAU;ACTd;;ACeI;EFdJ;IATQ,mCGmT0C;IHlT1C,kCGkT0C;EFrShD;AACF;;ADKA;EACI,qBAAoB;EACpB,UAAS;EACT,WAAU;EACV,2BAA0B;EAC1B,6BAA4B;EAC5B,eAAc;ACFlB;;ADKA;EACI,eAAc;EACd,MAAK;EACL,OAAM;EACN,gBAAe;EACf,uEGiR8C;EHhR9C,YAAW;EACX,YAAW;EACX,yCAAwC;ACF5C;;ACZI;EFMJ;IAYY,uCAAkD;IAAlD,sDAAkD;ECD5D;AACF;;ADZA;EAgBY,yBAAwB;EACxB,iCAAgC;ACA5C;;ADjBA;EAsBQ,qCGgQ0C;EH/P1C,sCAAqC;EACrC,uCAAsC;ACD9C;;ADvBA;EA4BQ,cAAa;EACb,qBAAoB;ACD5B;;ADKA;EACI,OAAM;EACN,gCGmP8C;EHlP9C,mCGkP8C;AFpPlD;;ADDA;EAMQ,uCG+O0C;AFhPlD;;ADLA;EAWY,kCAAiC;EACjC,uCAAsC;EACtC,sCAAqC;EACrC,yBAAwB;EACxB,2BGsOoD;EHrOpD,uCGqOsC;EHpOtC,qDAAoD;ACFhE;;ADOA;EACI,mCG8N8C;AFlOlD;;ADGA;EAIQ,yBAAwB;EACxB,sCAAqC;EACrC,mCAAkC;EAClC,uCAAsC;ACH9C;;ADJA;EAUY,YAAW;ACFvB;;ADRA;EAeQ,mBAAkB;ACH1B;;ADZA;;EEgSI,gBAAe;EACf,uBAAsB;EACtB,mBAAkB;AD/QtB;;ADnBA;EAuBY,UAAS;EACT,6BAA4B;ACAxC;;ADxBA;EA6BQ,iCAAgC;EAChC,sCAAqC;ACD7C;;ADKA;EACI,aAAY;EACZ,mBAAkB;EAClB,cAAa;EACb,+CAA8C;ACFlD;;ADKA;EACI,yBAAwB;EACxB,mCAAkC;ACFtC;;ADKA;EACI,WAAU;EACV,YAAW;EACX,6CAA4C;EAC5C,kBAAiB;EACjB,mCAAkC;ACFtC;;ADKA;EACI,gBAAe;EACf,qGAAoG;ACFxG;;ADKA;EACI,kBAAiB;EACjB,MAAK;EACL,OAAM;EACN,WAAU;EACV,YAAW;ACFf;;ADHA;EAQQ,kBAAiB;EACjB,QAAO;EACP,SAAQ;EACR,iBAAgB;EAChB,kBAAiB;EACjB,gCAA+B;ACDvC;;ADZA;EAiBQ,eAAc;ACDtB;;ADhBA;EAqBQ,yBAAwB;EACxB,kBI1IgB;AHyIxB;;AI7KA;EACI,4BAA2B;EAC3B,sCAAqC;AJgLzC;;AI7KA;;;;EAII,gBAAe;AJgLnB;;AI7KA;EACI,4BAA2B;AJgL/B;;AI7KA;EACI,YAAW;AJgLf;;AI7KA;;;;;;;EAOI,cAAa;AJgLjB;;AI7KA;;;;;;EAMI,cAAa;AJgLjB;;AI7KA;;;;;EAKI,oCAAiC;EACjC,cAAa;AJgLjB;;AI7KA;;;EAGI,cAAa;AJgLjB;;AI7KA;;EAEI,cAAa;AJgLjB;;AI7KA;;;EAGI,cAAa;AJgLjB;;AI7KA;;EAEI,iBAAgB;AJgLpB;;AI7KA;EACI,kBAAiB;AJgLrB;;AI7KA;EACI,YAAW;AJgLf","file":"../docs.css","sourcesContent":[":root {\r\n    --content-width:800px;\r\n}\r\n\r\n@mixin container-padding-horizontal {\r\n    padding-right:space();\r\n    padding-left:space();\r\n\r\n    @include min($breakpoint-s) {\r\n        padding-right:space(2);\r\n        padding-left:space(2);\r\n    }\r\n}\r\n\r\nhtml body #container#container#container {\r\n    @include controlled();\r\n}\r\n\r\n#container {\r\n    @include container-padding-horizontal();\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    margin:0 auto;\r\n    min-height:100vh;\r\n    max-width:var(--content-width);\r\n    width:100%;\r\n}\r\n\r\n.icon {\r\n    display:inline-block;\r\n    width:1em;\r\n    height:1em;\r\n    fill:var(--color-contrast);\r\n    stroke:var(--color-contrast);\r\n    stroke-width:0;\r\n}\r\n\r\n.site-header {\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    overflow-y:auto;\r\n    padding:space(3.375) space() space(4.375);\r\n    width:200px;\r\n    height:100%;\r\n    background-color:var(--color-background);\r\n\r\n    nav {\r\n        @include min($breakpoint-s) {\r\n            max-width:calc(var(--content-width) - #{alley(2)});\r\n        }\r\n\r\n        > * {\r\n            text-transform:uppercase;\r\n            font-size:var(--font-size-small);\r\n        }\r\n    }\r\n\r\n    .site-name {\r\n        margin-bottom:space(1.5);\r\n        font-weight:var(--font-weight-normal);\r\n        line-height:var(--line-height-general);\r\n    }\r\n\r\n    ul {\r\n        margin-left:0;\r\n        list-style-type:none;\r\n    }\r\n}\r\n\r\nmain {\r\n    flex:1;\r\n    margin-top:space(3);\r\n    margin-bottom:space(4);\r\n\r\n    > h1 {\r\n        margin-bottom:space(2.125);\r\n    }\r\n\r\n    > section {\r\n        > h2 {\r\n            font-size:var(--font-size-xsmall);\r\n            line-height:var(--line-height-general);\r\n            font-weight:var(--font-weight-normal);\r\n            text-transform:uppercase;\r\n            margin-bottom:space();\r\n            padding-bottom:space(0.25);\r\n            border-bottom:5px solid var(--color-contrast-lowest);\r\n        }\r\n    }\r\n}\r\n\r\n.doc-block {\r\n    margin-bottom:space(2);\r\n\r\n    h3 {\r\n        text-transform:uppercase;\r\n        font-weight:var(--font-weight-normal);\r\n        font-size:var(--font-size-general);\r\n        line-height:var(--line-height-general);\r\n\r\n        .icon {\r\n            float:right;\r\n        }\r\n    }\r\n\r\n    table {\r\n        table-layout:fixed;\r\n\r\n        th,\r\n        td {\r\n            @include ellipsis();\r\n        }\r\n\r\n        code {\r\n            padding:0;\r\n            background-color:transparent;\r\n        }\r\n    }\r\n\r\n    .anchor {\r\n        padding-top:var(--space-5xlarge);\r\n        font-weight:var(--font-weight-normal);\r\n    }\r\n}\r\n\r\n.site-footer {\r\n    display:flex;\r\n    align-items:center;\r\n    height:4.2rem;\r\n    border-top:1px solid var(--color-contrast-low);\r\n}\r\n\r\n.copyright {\r\n    text-transform:uppercase;\r\n    font-size:var(--font-size-xxsmall);\r\n}\r\n\r\n.colorbox {\r\n    width:42px;\r\n    height:42px;\r\n    border:1px solid var(--color-contrast-lower);\r\n    border-radius:50%;\r\n    box-shadow:0 0 0 4px #ffffff inset;\r\n}\r\n\r\n.decoy {\r\n    min-height:4rem;\r\n    background:linear-gradient(90deg, var(--color-contrast-lower) 0%, var(--color-contrast-lowest) 100%);\r\n}\r\n\r\n._404 {\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n\r\n    .inner {\r\n        position:absolute;\r\n        top:50%;\r\n        left:50%;\r\n        margin-top:-2rem;\r\n        text-align:center;\r\n        transform:translate(-50%, -50%);\r\n    }\r\n\r\n    h1 {\r\n        font-size:8rem;\r\n    }\r\n\r\n    p {\r\n        text-transform:uppercase;\r\n        font-size:$font-size-small;\r\n    }\r\n}\r\n",":root {\n  --content-width:800px;\n}\n\nhtml body #container#container#container *:last-child:not(.f-margins) {\n  margin-bottom: 0;\n}\n\n#container {\n  padding-right: var(--space);\n  padding-left: var(--space);\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  min-height: 100vh;\n  max-width: var(--content-width);\n  width: 100%;\n}\n\n@media (min-width: 480px) {\n  #container {\n    padding-right: calc(var(--space) * 2);\n    padding-left: calc(var(--space) * 2);\n  }\n}\n\n.icon {\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  fill: var(--color-contrast);\n  stroke: var(--color-contrast);\n  stroke-width: 0;\n}\n\n.site-header {\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow-y: auto;\n  padding: calc(var(--space) * 3.375) var(--space) calc(var(--space) * 4.375);\n  width: 200px;\n  height: 100%;\n  background-color: var(--color-background);\n}\n\n@media (min-width: 480px) {\n  .site-header nav {\n    max-width: calc(var(--content-width) - calc(var(--alley) * 2));\n  }\n}\n\n.site-header nav > * {\n  text-transform: uppercase;\n  font-size: var(--font-size-small);\n}\n\n.site-header .site-name {\n  margin-bottom: calc(var(--space) * 1.5);\n  font-weight: var(--font-weight-normal);\n  line-height: var(--line-height-general);\n}\n\n.site-header ul {\n  margin-left: 0;\n  list-style-type: none;\n}\n\nmain {\n  flex: 1;\n  margin-top: calc(var(--space) * 3);\n  margin-bottom: calc(var(--space) * 4);\n}\n\nmain > h1 {\n  margin-bottom: calc(var(--space) * 2.125);\n}\n\nmain > section > h2 {\n  font-size: var(--font-size-xsmall);\n  line-height: var(--line-height-general);\n  font-weight: var(--font-weight-normal);\n  text-transform: uppercase;\n  margin-bottom: var(--space);\n  padding-bottom: calc(var(--space) * 0.25);\n  border-bottom: 5px solid var(--color-contrast-lowest);\n}\n\n.doc-block {\n  margin-bottom: calc(var(--space) * 2);\n}\n\n.doc-block h3 {\n  text-transform: uppercase;\n  font-weight: var(--font-weight-normal);\n  font-size: var(--font-size-general);\n  line-height: var(--line-height-general);\n}\n\n.doc-block h3 .icon {\n  float: right;\n}\n\n.doc-block table {\n  table-layout: fixed;\n}\n\n.doc-block table th,\n.doc-block table td {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.doc-block table code {\n  padding: 0;\n  background-color: transparent;\n}\n\n.doc-block .anchor {\n  padding-top: var(--space-5xlarge);\n  font-weight: var(--font-weight-normal);\n}\n\n.site-footer {\n  display: flex;\n  align-items: center;\n  height: 4.2rem;\n  border-top: 1px solid var(--color-contrast-low);\n}\n\n.copyright {\n  text-transform: uppercase;\n  font-size: var(--font-size-xxsmall);\n}\n\n.colorbox {\n  width: 42px;\n  height: 42px;\n  border: 1px solid var(--color-contrast-lower);\n  border-radius: 50%;\n  box-shadow: 0 0 0 4px #ffffff inset;\n}\n\n.decoy {\n  min-height: 4rem;\n  background: linear-gradient(90deg, var(--color-contrast-lower) 0%, var(--color-contrast-lowest) 100%);\n}\n\n._404 {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n._404 .inner {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-top: -2rem;\n  text-align: center;\n  transform: translate(-50%, -50%);\n}\n\n._404 h1 {\n  font-size: 8rem;\n}\n\n._404 p {\n  text-transform: uppercase;\n  font-size: 0.889em;\n}\n\npre[class*=language-] {\n  color: var(--color-contrast);\n  font-weight: var(--font-weight-normal);\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n  color: slategray;\n}\n\n.token.punctuation {\n  color: var(--color-contrast);\n}\n\n.namespace {\n  opacity: 0.7;\n}\n\n.token.property,\n.token.tag,\n.token.boolean,\n.token.number,\n.token.constant,\n.token.symbol,\n.token.deleted {\n  color: #990055;\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n  color: #669900;\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string {\n  background: rgba(255, 255, 255, 0.5);\n  color: #9a6e3a;\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n  color: #0077aa;\n}\n\n.token.function,\n.token.class-name {\n  color: #dd4a68;\n}\n\n.token.regex,\n.token.important,\n.token.variable {\n  color: #ee9900;\n}\n\n.token.important,\n.token.bold {\n  font-weight: bold;\n}\n\n.token.italic {\n  font-style: italic;\n}\n\n.token.entity {\n  cursor: help;\n}\n","/// Converts `$aspect-width` and `$aspect-height` to the appropriate bottom padding.\r\n/// @param {<number>} $aspect-width [16]\r\n/// @param {<number>} $aspect-height [9]\r\n/// @access private\r\n@mixin aspect-ratio-to-padding($aspect-width:16, $aspect-height:9) {\r\n    padding-bottom:percentage($aspect-height / $aspect-width);\r\n}\r\n\r\n/// Adds styles for a responsive video container.\r\n/// @param {<number>} $aspect-width [16]\r\n/// @param {<number>} $aspect-height [9]\r\n@mixin video-container($aspect-width:16, $aspect-height:9) {\r\n    @include aspect-ratio-to-padding($aspect-width, $aspect-height);\r\n\r\n    position:relative;\r\n    display:block;\r\n    height:0;\r\n\r\n    iframe,\r\n    object,\r\n    embed {\r\n        position:absolute;\r\n        top:0;\r\n        left:0;\r\n        width:100%;\r\n        height:100%;\r\n    }\r\n}\r\n\r\n/// Includes `@content` on screens that are at least `$min-width` wide.\r\n/// @param {<number>} $min-width\r\n@mixin min($min-width) {\r\n    @media (min-width:$min-width) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Includes `@content` on screens up to `$max-width` wide.\r\n/// @param {<number>} $max-width\r\n@mixin max($max-width) {\r\n    @media (max-width:$max-width) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// @param {<number>} $min-width\r\n/// @param {<number>} $max-width\r\n@mixin min-max($min-width, $max-width) {\r\n    @media (min-width:$min-width) and (max-width:$max-width) {\r\n        @content;\r\n    }\r\n}\r\n\r\n///\r\n@mixin min-small() {\r\n    @media (min-width:$breakpoint-s) {\r\n        @content;\r\n    }\r\n}\r\n\r\n///\r\n@mixin min-medium() {\r\n    @media (min-width:$breakpoint-m) {\r\n        @content;\r\n    }\r\n}\r\n\r\n///\r\n@mixin min-large() {\r\n    @media (min-width:$breakpoint-l) {\r\n        @content;\r\n    }\r\n}\r\n\r\n///\r\n@mixin min-xlarge() {\r\n    @media (min-width:$breakpoint-xl) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Includes `@content` for ie9 and above.\r\n@mixin ie9plus() {\r\n    // @formatter:off\r\n    @media (min-width:0\\0) and (min-resolution:+72dpi) {\r\n        @content;\r\n    }\r\n    // @formatter:on\r\n}\r\n\r\n/// Includes `@content` for ie10 and above.\r\n@mixin ie10plus() {\r\n    @media (-ms-high-contrast:none), (-ms-high-contrast:active) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Removes margins if element is the first and/or last child (depending on `$scope`).\r\n/// @param {<string>} $scope [all]\r\n@mixin control-margins($scope:all) {\r\n    $scope-y:$scope == vertical or $scope == all;\r\n    $scope-x:$scope == horizontal or $scope == all;\r\n\r\n    @if $scope-y or $scope == top {\r\n        &:first-child:not(.f-margins) {\r\n            margin-top:0;\r\n        }\r\n    }\r\n\r\n    @if $scope-x or $scope == right {\r\n        &:last-child:not(.f-margins) {\r\n            margin-right:0;\r\n        }\r\n    }\r\n\r\n    @if $scope-y or $scope == bottom {\r\n        &:last-child:not(.f-margins) {\r\n            margin-bottom:0;\r\n        }\r\n    }\r\n\r\n    @if $scope-x or $scope == left {\r\n        &:first-child:not(.f-margins) {\r\n            margin-left:0;\r\n        }\r\n    }\r\n}\r\n\r\n/// Removes bottom margins from last children.\r\n@mixin controlled($scope:bottom) {\r\n    * {\r\n        @include control-margins($scope);\r\n    }\r\n}\r\n\r\n/// Sets default vertical margins for selected elements\r\n/// @param {<number>|false} $multiplier [false]\r\n@mixin vertical-margins($multiplier:false) {\r\n    $m:if(is-nonneg-unitless-number($multiplier), $multiplier, false);\r\n\r\n    hr {\r\n        margin-top:if($m, space($m), space());\r\n        margin-bottom:if($m, space($m), space());\r\n    }\r\n\r\n    caption {\r\n        margin-bottom:if($m, calc(#{space($m)} * .25), calc(#{space()} * .25));\r\n    }\r\n\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    h6 {\r\n        @include control-margins(top);\r\n\r\n        margin-top:if($m, calc(var(--space-top-h) * #{$m}), var(--space-top-h));\r\n        margin-bottom:if($m, calc(var(--space-bottom-h) * #{$m}), var(--space-bottom-h));\r\n    }\r\n\r\n    address,\r\n    blockquote,\r\n    canvas,\r\n    dl,\r\n    fieldset,\r\n    figure,\r\n    form,\r\n    hr,\r\n    noscript,\r\n    ol,\r\n    p,\r\n    pre,\r\n    table,\r\n    ul,\r\n    video {\r\n        margin-bottom:if($m, space($m), space());\r\n    }\r\n}\r\n\r\n/// @param {1|2|3|4|5} $type\r\n/// @param {<number>|false} $margins-multiplier [false]\r\n@mixin h($type:1, $margins-multiplier:false) {\r\n    font-weight:var(--font-weight-heading);\r\n    font-size:var(--font-size-h#{$type});\r\n    font-family:var(--font-stack-heading);\r\n    line-height:var(--line-height-h#{$type});\r\n\r\n    @if is-nonneg-unitless-number($margins-multiplier) {\r\n        $m:$margins-multiplier;\r\n\r\n        @include control-margins(top);\r\n\r\n        margin-top:if($m, calc(var(--space-top-h) * #{$m}), var(--space-top-h));\r\n        margin-bottom:if($m, calc(var(--space-bottom-h) * #{$m}), var(--space-bottom-h));\r\n    }\r\n}\r\n\r\n///\r\n@mixin big() {\r\n    font-size:var(--font-size-big);\r\n    line-height:var(--line-height-big);\r\n}\r\n\r\n///\r\n@mixin xbig() {\r\n    font-size:var(--font-size-xbig);\r\n    line-height:var(--line-height-xbig);\r\n}\r\n\r\n///\r\n@mixin xxbig() {\r\n    font-size:var(--font-size-xxbig);\r\n    line-height:var(--line-height-xxbig);\r\n}\r\n\r\n///\r\n@mixin small() {\r\n    font-size:var(--font-size-small);\r\n    line-height:var(--line-height-small);\r\n}\r\n\r\n///\r\n@mixin xsmall() {\r\n    font-size:var(--font-size-xsmall);\r\n    line-height:var(--line-height-xsmall);\r\n}\r\n\r\n///\r\n@mixin xxsmall() {\r\n    font-size:var(--font-size-xxsmall);\r\n    line-height:var(--line-height-xxsmall);\r\n}\r\n\r\n/// Hides element when viewport is as wide or wider than `$breakpoint`\r\n@mixin hide($breakpoint:s) {\r\n    @if index(map-keys($breakpoints), $breakpoint) {\r\n        @include min(map-get($breakpoints, $breakpoint)) {\r\n            display:none;\r\n        }\r\n    } @else if is-nonneg-unit-number($breakpoint) {\r\n        @include min($breakpoint) {\r\n            display:none;\r\n        }\r\n    }\r\n}\r\n\r\n/// @param {<number>} $multiplier [1]\r\n/// @param {<bool>} $important [false]\r\n@mixin mgbch($multiplier:1, $important:false) {\r\n    $m:if(is-unitless-number($multiplier), $multiplier, 1);\r\n    $i:if($important == true, $important, false);\r\n\r\n    margin-top:space(-$m) if($i, !important, null);\r\n\r\n    > * {\r\n        margin-top:space($m) if($i, !important, null);\r\n    }\r\n}\r\n\r\n/// @param {row|col} $type [row]\r\n/// @param {<number>|false} $multiplier [false]\r\n@mixin row-alleys($type:row, $multiplier:false) {\r\n    $m:false;\r\n\r\n    @if index(map-keys($alley-sizes), $multiplier) {\r\n        $m:map-get($alley-sizes, $multiplier);\r\n    } @else if is-nonneg-unitless-number($multiplier) {\r\n        $m:$multiplier;\r\n    }\r\n\r\n    @if $type == row {\r\n        margin-right:if($m, calc(#{alley(-$m)} / 2), calc(#{alley(-1)} / 2));\r\n        margin-left:if($m, calc(#{alley(-$m)} / 2), calc(#{alley(-1)} / 2));\r\n    } @else if $type == col {\r\n        padding-right:if($m, calc(#{alley($m)} / 2), calc(#{alley()} / 2));\r\n        padding-left:if($m, calc(#{alley($m)} / 2), calc(#{alley()} / 2));\r\n    }\r\n}\r\n\r\n///\r\n@mixin row($alley-multiplier:false) {\r\n    @include row-alleys(row, $alley-multiplier);\r\n\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n\r\n    > * {\r\n        @include row-alleys(col, $alley-multiplier);\r\n    }\r\n}\r\n\r\n/// @access private\r\n@mixin row-alley-styles($alley-multiplier) {\r\n    @include row-alleys(row, $alley-multiplier);\r\n\r\n    > * {\r\n        @include row-alleys(col, $alley-multiplier);\r\n    }\r\n}\r\n\r\n///\r\n@mixin row-alley($alley-multiplier, $breakpoint:false) {\r\n    $m:false;\r\n\r\n    @if index(map-keys($alley-sizes), $alley-multiplier) {\r\n        $m:map-get($alley-sizes, $alley-multiplier);\r\n    } @else if is-nonneg-unitless-number($alley-multiplier) {\r\n        $m:$alley-multiplier;\r\n    }\r\n\r\n    @if $m {\r\n        @if index(map-keys($breakpoints), $breakpoint) {\r\n            @include min(map-get($breakpoints, $breakpoint)) {\r\n                @include row-alley-styles($m);\r\n            }\r\n        } @else if is-nonneg-unit-number($breakpoint) {\r\n            @include min($breakpoint) {\r\n                @include row-alley-styles($m);\r\n            }\r\n        } @else {\r\n            @include row-alley-styles($m);\r\n        }\r\n    }\r\n}\r\n\r\n///\r\n@mixin col-width($column-width, $breakpoint:false) {\r\n    @if index(map-keys($columns), $column-width) {\r\n        @if index(map-keys($breakpoints), $breakpoint) {\r\n            @include min(map-get($breakpoints, $breakpoint)) {\r\n                width:map-get($columns, $column-width);\r\n            }\r\n        } @else if is-nonneg-unit-number($breakpoint) {\r\n            @include min($breakpoint) {\r\n                width:map-get($columns, $column-width);\r\n            }\r\n        } @else {\r\n            width:map-get($columns, $column-width);\r\n        }\r\n    } @else if is-nonneg-unitless-number($column-width) {\r\n        @if index(map-keys($breakpoints), $breakpoint) {\r\n            @include min(map-get($breakpoints, $breakpoint)) {\r\n                width:percentage($column-width);\r\n            }\r\n        } @else if is-nonneg-unit-number($breakpoint) {\r\n            @include min($breakpoint) {\r\n                width:percentage($column-width);\r\n            }\r\n        } @else {\r\n            width:percentage($column-width);\r\n        }\r\n    }\r\n}\r\n\r\n/// Utility to clear floats\r\n@mixin clearfix() {\r\n    &:before,\r\n    &:after {\r\n        display:table;\r\n        clear:both;\r\n        width:100%;\r\n        content:'';\r\n    }\r\n}\r\n\r\n///\r\n@mixin figcaption() {\r\n    padding-top:space(0.375);\r\n    color:var(--color-contrast-medium);\r\n    text-align:center;\r\n    font-size:var(--font-size-xsmall);\r\n}\r\n\r\n/// Unsets border radius\r\n@mixin sq() {\r\n    border-radius:unset;\r\n}\r\n\r\n///\r\n@mixin ellipsis() {\r\n    overflow:hidden;\r\n    text-overflow:ellipsis;\r\n    white-space:nowrap;\r\n}\r\n","//\r\n// Strings\r\n//\r\n//\r\n\r\n/// Joins `$list` items into a `$glue` separated string and uses an optional `$closer` before the final item.\r\n/// @param {<list>} $list\r\n/// @param {<any>} $glue ['']\r\n/// @param {<any>} $closer [null]\r\n/// @param {<bool>} $quote-strings [false]\r\n@function list-to-string($list, $glue:'', $closer:null, $quote-strings:true) {\r\n    $output:null;\r\n    $last-item:null;\r\n    $last-item-quoted:false;\r\n\r\n    @if type-of($list) != list {\r\n        @error '`#{$list}` is not a valid list.';\r\n    }\r\n\r\n    @for $i from 1 through length($list) {\r\n        $item:nth($list, $i);\r\n\r\n        @if type-of($item) == list {\r\n            @if $i == length($list) {\r\n                $last-item:nth($item, -1);\r\n                $is-nested-list:type-of($last-item) == list;\r\n\r\n                @while $is-nested-list {\r\n                    $last-item:nth($last-item, -1);\r\n\r\n                    @if type-of($last-item) != list {\r\n                        $is-nested-list:false;\r\n                        $last-item-quoted:type-of($last-item) == string and $quote-strings;\r\n                    }\r\n                }\r\n\r\n                $output:#{$output}#{list-to-string($item, $glue, null, $quote-strings)};\r\n            } @else {\r\n                $output:#{$output}#{list-to-string($item, $glue, null, $quote-strings)}#{$glue};\r\n            }\r\n        } @else {\r\n            $item:if(type-of($item) == string and $quote-strings, '\"#{$item}\"', $item);\r\n\r\n            @if $i == length($list) {\r\n                $last-item:$item;\r\n                $last-item-quoted:type-of($last-item) == string and $quote-strings;\r\n\r\n                $output:#{$output}#{$item}\r\n            } @else {\r\n                $output:#{$output}#{$item}#{$glue};\r\n            }\r\n        }\r\n    }\r\n\r\n    @if $closer != null {\r\n        $offset:if($last-item-quoted, 2, 0);\r\n        $find:#{$glue}#{$last-item};\r\n        $slice-1:str-slice($output, 1, -(str-length(#{$find}) + 1 + $offset));\r\n        $slice-2:str-slice($output, -(str-length(#{$last-item}) + $offset));\r\n        $output:#{$slice-1}#{$closer}#{$slice-2};\r\n    }\r\n\r\n    @return $output;\r\n}\r\n\r\n//\r\n// Colors\r\n//\r\n//\r\n\r\n/// Returns a `$dark` or `$light` color depending on the lightness `$threshold` of the `$bg-color`.\r\n/// @param {<color>} $bg-color\r\n/// @param {<number>} $threshold [60]\r\n/// @param {<color>} $dark [black]\r\n/// @param {<color>} $light [white]\r\n@function auto-color-contrast($bg-color, $threshold: 84, $dark: black, $light: white) {\r\n    @if type-of($bg-color) != color {\r\n        @error '`#{$bg-color}` is not a valid color.';\r\n    }\r\n\r\n    @if not is-nonneg-number($threshold) {\r\n        @error '`#{$threshold}` is not a nonnegative number.';\r\n    }\r\n\r\n    @if lightness($bg-color) > $threshold {\r\n        @return $dark;\r\n    } @else {\r\n        @return $light;\r\n    }\r\n}\r\n\r\n//\r\n// Numbers\r\n//\r\n//\r\n\r\n/// Ceils `$number` to given decimal `$places`.\r\n/// @param {<number>} $number\r\n/// @param {<number>} $places\r\n@function decimal-ceil($number, $places:3) {\r\n    @return decimal-round($number, $places, ceil);\r\n}\r\n\r\n/// Floors `$number` to given decimal `$places`.\r\n/// @param {<number>} $number\r\n/// @param {<number>} $places\r\n@function decimal-floor($number, $places:3) {\r\n    @return decimal-round($number, $places, floor);\r\n}\r\n\r\n/// Rounds, ceils or floors `$number` to given decimal `$places`.\r\n/// @param {<number>} $number\r\n/// @param {<number>} $places\r\n/// @param {<any> (round, ceil, floor)} $mode [round]\r\n@function decimal-round($number, $places:3, $mode:round) {\r\n    $n:1;\r\n\r\n    @if not is-number($number) {\r\n        @return $number;\r\n    }\r\n\r\n    @if not is-number($places) {\r\n        @return $number;\r\n    }\r\n\r\n    @if $places > 0 and $places < 20 {\r\n        @for $i from 1 through $places {\r\n            $n:$n * 10;\r\n        }\r\n    }\r\n\r\n    @if $mode == round {\r\n        @return round($number * $n) / $n;\r\n    } @else if $mode == ceil {\r\n        @return ceil($number * $n) / $n;\r\n    } @else if $mode == floor {\r\n        @return floor($number * $n) / $n;\r\n    } @else {\r\n        @return $number;\r\n    }\r\n}\r\n\r\n/// Removes the unit from `$number`.\r\n/// @param {<number>} $number\r\n@function strip-unit($number) {\r\n    @if type-of($number) == 'number' and not unitless($number) {\r\n        @return $number / ($number * 0 + 1);\r\n    }\r\n\r\n    @return $number;\r\n}\r\n\r\n/// Converts `$size-in-rem` to pixels based on `$font-size-base`.\r\n/// @param {<number>} $size-in-rem\r\n/// @param {<number>} $font-size-base\r\n@function rem-to-pixels($size-in-rem, $font-size-base) {\r\n    @return strip-unit($size-in-rem) * $font-size-base;\r\n}\r\n\r\n//\r\n// Conditionals\r\n//\r\n//\r\n\r\n/// Checks if `$value` is a boolean.\r\n/// @param {<any>} $value\r\n@function is-bool($value) {\r\n    @return type-of($value) == bool;\r\n}\r\n\r\n/// Checks if `$value` is a color.\r\n/// @param {<any>} $value\r\n@function is-color($value) {\r\n    @return type-of($value) == color;\r\n}\r\n\r\n/// Checks if `$value` is a string.\r\n/// @param {<any>} $value\r\n@function is-string($value) {\r\n    @return type-of($value) == string;\r\n}\r\n\r\n/// Checks if `$value` is a number.\r\n/// @param {<any>} $value\r\n@function is-number($value) {\r\n    @return type-of($value) == number;\r\n}\r\n\r\n/// Checks if `$value` is a number with a unit.\r\n/// @param {<any>} $value\r\n/// @param {<bool>} $warn [false]\r\n@function is-unit-number($value, $warn: false) {\r\n    @if is-number($value) and index($lengths, unit($value)) {\r\n        @return true;\r\n    }\r\n\r\n    @if $warn == true {\r\n        @warn '`$value` must be a <length>. #{show-param-value($value)}';\r\n    }\r\n\r\n    @return false;\r\n}\r\n\r\n/// Checks if `$value` is a unitless number.\r\n/// @param {<any>} $value\r\n/// @param {<bool>} $warn [false]\r\n@function is-unitless-number($value, $warn: false) {\r\n    @if is-number($value) and unitless($value) {\r\n        @return true;\r\n    }\r\n\r\n    @if $warn == true {\r\n        @warn '`$value` must be a unitless <number>. #{show-param-value($value)}';\r\n    }\r\n\r\n    @return false;\r\n}\r\n\r\n/// Checks if `$value` is a nonnegative number.\r\n/// @param {<any>} $value\r\n/// @param {<bool>} $warn [false]\r\n@function is-nonneg-number($value, $warn: false) {\r\n    @if is-number($value) and $value > -1 {\r\n        @return true;\r\n    }\r\n\r\n    @if $warn == true {\r\n        @warn '`$value` must be a nonnegative <number>. #{show-param-value($value)}';\r\n    }\r\n\r\n    @return false;\r\n}\r\n\r\n/// Checks if `$value` is a nonnegative number with a unit.\r\n/// @param {<any>} $value\r\n/// @param {<bool>} $warn [false]\r\n@function is-nonneg-unit-number($value, $warn: false) {\r\n    @if is-nonneg-number($value) and index($lengths, unit($value)) {\r\n        @return true;\r\n    }\r\n\r\n    @if $warn == true {\r\n        @warn '`$value` must be a nonnegative <length>. #{show-param-value($value)}';\r\n    }\r\n\r\n    @return false;\r\n}\r\n\r\n/// Checks if `$value` is a nonnegative, unitless number.\r\n/// @param {<any>} $value\r\n/// @param {<bool>} $warn [false]\r\n@function is-nonneg-unitless-number($value, $warn: false) {\r\n    @if is-nonneg-number($value) and unitless($value) {\r\n        @return true;\r\n    }\r\n\r\n    @if $warn == true {\r\n        @warn '`$value` must be a nonnegative, unitless <number>. #{show-param-value($number)}';\r\n    }\r\n\r\n    @return false;\r\n}\r\n\r\n/// Checks if `$value` is a map.\r\n/// @param {<any>} $value\r\n@function is-map($value) {\r\n    @return type-of($value) == map;\r\n}\r\n\r\n/// Checks if `$value` is a list.\r\n/// @param {<any>} $value\r\n@function is-list($value) {\r\n    @return type-of($value) == list;\r\n}\r\n\r\n/// Checks if `$needle` is found in `$haystack`.\r\n/// @param {<any>|number} $needle\r\n/// @param {<list>} $haystack\r\n/// @param {<bool>} $warn [false]\r\n@function is-in-list($needle, $haystack, $warn: false) {\r\n    @if index($haystack, $needle) {\r\n        @return true;\r\n    }\r\n\r\n    @if $warn == true {\r\n        @warn 'Invalid `$needle`. #{show-param-value($needle)} #{format-valid-values($haystack)}';\r\n    }\r\n\r\n    @return false;\r\n}\r\n\r\n//\r\n// Utilities\r\n//\r\n//\r\n\r\n/// Returns a formatted string containing `$value` and its type.\r\n/// @param {<any>} $value\r\n/// @access private\r\n@function show-param-value($value) {\r\n    $value:if(type-of($value) == string, '\"#{$value}\"', $value);\r\n\r\n    @return 'Received: <#{type-of($value)}: #{$value}>.';\r\n}\r\n\r\n/// Returns a formatted string of valid `$values`.\r\n/// @param {<list>} $values\r\n/// @access private\r\n@function format-valid-values($values) {\r\n    @return 'Valid values are #{list-to-string($values, ', ', ' and ')}.';\r\n}\r\n\r\n/// @param {<number>} $multiplier\r\n@function space($multiplier: 1) {\r\n    $m: if(is-unitless-number($multiplier), $multiplier, 1);\r\n\r\n    @return if($m != 1, calc(var(--space) * #{$m}), var(--space));\r\n}\r\n\r\n/// @param {<number>} $multiplier\r\n@function alley($multiplier: 1) {\r\n    $m: if(is-unitless-number($multiplier), $multiplier, 1);\r\n\r\n    @return if($m != 1, calc(var(--alley) * #{$m}), var(--alley));\r\n}\r\n","//\r\n// Fonts\r\n//\r\n//\r\n\r\n///\r\n$font-stack-serif:Constantia, 'Lucida Bright', Lucidabright, Georgia, serif !default;\r\n///\r\n$font-stack-sansserif:'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif !default;\r\n///\r\n$font-stack-general:$font-stack-sansserif !default;\r\n///\r\n$font-stack-heading:$font-stack-general !default;\r\n///\r\n$font-stack-monospace:Consolas, 'Ubuntu Mono', 'Lucida Console', 'Courier New', Courier, monospace !default;\r\n///\r\n$font-stacks:() !default;\r\n///\r\n$font-stacks:map-merge((\r\n    serif: $font-stack-serif,\r\n    sansserif: $font-stack-sansserif,\r\n    general: $font-stack-general,\r\n    heading: $font-stack-heading,\r\n    monospace: $font-stack-monospace,\r\n), $font-stacks);\r\n///\r\n$font-size-base:16px !default; // must be in px\r\n///\r\n$font-size-general:1rem !default;\r\n///\r\n$font-size-big:1.125em !default;\r\n///\r\n$font-size-xbig:1.266em !default;\r\n///\r\n$font-size-xxbig:1.424em !default;\r\n///\r\n$font-size-small:0.889em !default;\r\n///\r\n$font-size-xsmall:0.79em !default;\r\n///\r\n$font-size-xxsmall:0.702em !default;\r\n///\r\n$font-size-h1:1.802em !default;\r\n///\r\n$font-size-h2:1.602em !default;\r\n///\r\n$font-size-h3:1.424em !default;\r\n///\r\n$font-size-h4:1.266em !default;\r\n///\r\n$font-size-h5:1.125em !default;\r\n///\r\n$font-sizes:() !default;\r\n///\r\n$font-sizes:map-merge((\r\n    base: $font-size-base,\r\n    general: $font-size-general,\r\n    big: $font-size-big,\r\n    xbig: $font-size-xbig,\r\n    xxbig: $font-size-xxbig,\r\n    small: $font-size-small,\r\n    xsmall: $font-size-xsmall,\r\n    xxsmall: $font-size-xxsmall,\r\n    h1: $font-size-h1,\r\n    h2: $font-size-h2,\r\n    h3: $font-size-h3,\r\n    h4: $font-size-h4,\r\n    h5: $font-size-h5,\r\n), $font-sizes);\r\n///\r\n$font-weight-normal:400 !default;\r\n///\r\n$font-weight-bold:700 !default;\r\n///\r\n$font-weight-heading:$font-weight-bold !default;\r\n///\r\n$font-weights:() !default;\r\n///\r\n$font-weights:map-merge((\r\n    normal: $font-weight-normal,\r\n    bold: $font-weight-bold,\r\n    heading: $font-weight-heading,\r\n), $font-weights);\r\n///\r\n$line-height-general:1.5 !default;\r\n///\r\n$line-height-big:1.45 !default;\r\n///\r\n$line-height-xbig:1.4 !default;\r\n///\r\n$line-height-xxbig:1.35 !default;\r\n///\r\n$line-height-small:1.55 !default;\r\n///\r\n$line-height-xsmall:1.6 !default;\r\n///\r\n$line-height-xxsmall:1.65 !default;\r\n///\r\n$line-height-h1:1.25 !default;\r\n///\r\n$line-height-h2:1.3 !default;\r\n///\r\n$line-height-h3:1.35 !default;\r\n///\r\n$line-height-h4:1.4 !default;\r\n///\r\n$line-height-h5:1.45 !default;\r\n///\r\n$line-height-general-in-rem:$line-height-general * 1rem !default;\r\n///\r\n$line-height-h1-in-rem:$line-height-h1 * 1rem !default;\r\n///\r\n$line-height-h2-in-rem:$line-height-h2 * 1rem !default;\r\n///\r\n$line-height-h3-in-rem:$line-height-h3 * 1rem !default;\r\n///\r\n$line-height-h4-in-rem:$line-height-h4 * 1rem !default;\r\n///\r\n$line-height-h5-in-rem:$line-height-h5 * 1rem !default;\r\n///\r\n$line-height-big-in-rem:$line-height-big * 1rem !default;\r\n///\r\n$line-height-xbig-in-rem:$line-height-xbig * 1rem !default;\r\n///\r\n$line-height-xxbig-in-rem:$line-height-xxbig * 1rem !default;\r\n///\r\n$line-height-small-in-rem:$line-height-small * 1rem !default;\r\n///\r\n$line-height-xsmall-in-rem:$line-height-xsmall * 1rem !default;\r\n///\r\n$line-height-xxsmall-in-rem:$line-height-xxsmall * 1rem !default;\r\n///\r\n$line-heights:() !default;\r\n///\r\n$line-heights:map-merge((\r\n    general: $line-height-general,\r\n    big: $line-height-big,\r\n    xbig: $line-height-xbig,\r\n    xxbig: $line-height-xxbig,\r\n    small: $line-height-small,\r\n    xsmall: $line-height-xsmall,\r\n    xxsmall: $line-height-xxsmall,\r\n    h1: $line-height-h1,\r\n    h2: $line-height-h2,\r\n    h3: $line-height-h3,\r\n    h4: $line-height-h4,\r\n    h5: $line-height-h5,\r\n    general-in-rem: $line-height-general-in-rem,\r\n    big-in-rem: $line-height-big-in-rem,\r\n    xbig-in-rem: $line-height-xbig-in-rem,\r\n    xxbig-in-rem: $line-height-xxbig-in-rem,\r\n    small-in-rem: $line-height-small-in-rem,\r\n    xsmall-in-rem: $line-height-xsmall-in-rem,\r\n    xxsmall-in-rem: $line-height-xxsmall-in-rem,\r\n    h1-in-rem: $line-height-h1-in-rem,\r\n    h2-in-rem: $line-height-h2-in-rem,\r\n    h3-in-rem: $line-height-h3-in-rem,\r\n    h4-in-rem: $line-height-h4-in-rem,\r\n    h5-in-rem: $line-height-h5-in-rem,\r\n), $line-heights);\r\n\r\n//\r\n// Colors\r\n//\r\n//\r\n\r\n///\r\n$color-primary:#dc2f3c !default;\r\n///\r\n$color-dark-accent:#587b98 !default;\r\n///\r\n$color-light-accent:#76b1df !default;\r\n///\r\n$color-background:#ffffff !default;\r\n///\r\n$color-contrast:#252428 !default;\r\n///\r\n$color-contrast-medium:#8c8c8c !default;\r\n///\r\n$color-contrast-low:#bfbfbf !default;\r\n///\r\n$color-contrast-lower:#d9d9d9 !default;\r\n///\r\n$color-contrast-lowest:#f2f2f2 !default;\r\n///\r\n$color-contrast-high:#737373 !default;\r\n///\r\n$color-contrast-higher:#595959 !default;\r\n///\r\n$color-contrast-highest:#404040 !default;\r\n///\r\n$color-success:#27ae60 !default;\r\n///\r\n$color-alert:#c0392b !default;\r\n///\r\n$color-warning:#d35400 !default;\r\n///\r\n$color-highlight:#f1c40f !default;\r\n///\r\n$color-dribbble:#ea4c89 !default;\r\n///\r\n$color-facebook:#3b5998 !default;\r\n///\r\n$color-flickr:#ff0084 !default;\r\n///\r\n$color-instagram:#517fa4 !default;\r\n///\r\n$color-linkedin:#0077b5 !default;\r\n///\r\n$color-medium:#00ab6b !default;\r\n///\r\n$color-pinterest:#bd081c !default;\r\n///\r\n$color-rss:#f26522 !default;\r\n///\r\n$color-tumblr:#35465c !default;\r\n///\r\n$color-twitter:#55acee !default;\r\n///\r\n$color-youtube:#b31217 !default;\r\n///\r\n$colors:() !default;\r\n///\r\n$colors:map-merge((\r\n    primary:$color-primary,\r\n    dark-accent:$color-dark-accent,\r\n    light-accent:$color-light-accent,\r\n    background:$color-background,\r\n    contrast:$color-contrast,\r\n    contrast-medium:$color-contrast-medium,\r\n    contrast-low:$color-contrast-low,\r\n    contrast-lower:$color-contrast-lower,\r\n    contrast-lowest:$color-contrast-lowest,\r\n    contrast-high:$color-contrast-high,\r\n    contrast-higher:$color-contrast-higher,\r\n    contrast-highest:$color-contrast-highest,\r\n    success:$color-success,\r\n    alert:$color-alert,\r\n    warning:$color-warning,\r\n    highlight:$color-highlight,\r\n    dribbble:$color-dribbble,\r\n    facebook:$color-facebook,\r\n    flickr:$color-flickr,\r\n    instagram:$color-instagram,\r\n    linkedin:$color-linkedin,\r\n    medium:$color-medium,\r\n    pinterest:$color-pinterest,\r\n    rss:$color-rss,\r\n    tumblr:$color-tumblr,\r\n    twitter:$color-twitter,\r\n    youtube:$color-youtube,\r\n), $colors);\r\n\r\n//\r\n// Spacing\r\n//\r\n//\r\n\r\n///\r\n$space:$font-size-general * $line-height-general !default;\r\n///\r\n$alley:2rem !default;\r\n///\r\n$p-inline-t:0.125rem !default;\r\n///\r\n$p-inline-r:0.25rem !default;\r\n///\r\n$p-inline-b:0.125rem !default;\r\n///\r\n$p-inline-l:0.25rem !default;\r\n///\r\n$p-box-t:0.75rem !default;\r\n///\r\n$p-box-r:1.25rem !default;\r\n///\r\n$p-box-b:0.75rem !default;\r\n///\r\n$p-box-l:1rem !default;\r\n///\r\n$p-message-t:0.75rem !default;\r\n///\r\n$p-message-r:3.25rem !default;\r\n///\r\n$p-message-b:0.75rem !default;\r\n///\r\n$p-message-l:1rem !default;\r\n///\r\n$p-table-t:0.5rem !default;\r\n///\r\n$p-table-r:2rem !default;\r\n///\r\n$p-table-b:0.5rem !default;\r\n///\r\n$p-table-l:0 !default;\r\n///\r\n$p-button-t:0.425em !default;\r\n///\r\n$p-button-r:1em !default;\r\n///\r\n$p-button-b:0.425em !default;\r\n///\r\n$p-button-l:1em !default;\r\n///\r\n$p-input-t:0.5rem !default;\r\n///\r\n$p-input-r:0.75rem !default;\r\n///\r\n$p-input-b:0.5rem !default;\r\n///\r\n$p-input-l:0.75rem !default;\r\n///\r\n$alley-sizes:() !default;\r\n///\r\n$alley-sizes:map-merge((\r\n    noalley: 0,\r\n    tightest: 0.25,\r\n    tighter: 0.5,\r\n    tight: 0.75,\r\n    comfy: 1,\r\n    loose: 1.25,\r\n    looser: 1.5,\r\n    loosest: 1.75,\r\n), $alley-sizes);\r\n\r\n//\r\n// Transitions and Animations\r\n//\r\n//\r\n\r\n///\r\n$ease-in-out-expo:cubic-bezier(1, 0, 0, 1);\r\n///\r\n$ease-in-out-quart:cubic-bezier(0.77, 0, 0.175, 1);\r\n///\r\n$default-easing:$ease-in-out-expo !default;\r\n\r\n//\r\n// Etcetera\r\n//\r\n//\r\n\r\n///\r\n$border-size:1px !default;\r\n///\r\n$max-site-width:1200px !default;\r\n\r\n//\r\n// Breakpoints\r\n//\r\n//\r\n\r\n///\r\n$breakpoint-s:480px !default;\r\n///\r\n$breakpoint-m:768px !default;\r\n///\r\n$breakpoint-l:960px !default;\r\n///\r\n$breakpoint-xl:1200px !default;\r\n///\r\n$breakpoints:() !default;\r\n///\r\n$breakpoints:map-merge((\r\n    s: $breakpoint-s,\r\n    m: $breakpoint-m,\r\n    l: $breakpoint-l,\r\n    xl: $breakpoint-xl,\r\n), $breakpoints);\r\n///\r\n$columns:() !default;\r\n///\r\n$columns:map-merge((\r\n    1: percentage(1/12),\r\n    2: percentage(2/12),\r\n    3: percentage(3/12),\r\n    4: percentage(4/12),\r\n    5: percentage(5/12),\r\n    6: percentage(6/12),\r\n    7: percentage(7/12),\r\n    8: percentage(8/12),\r\n    9: percentage(9/12),\r\n    10: percentage(10/12),\r\n    11: percentage(11/12),\r\n    12: percentage(12/12),\r\n    p5: 5%,\r\n    p10: 10%,\r\n    p15: 15%,\r\n    p20: 20%,\r\n    p25: 25%,\r\n    p30: 30%,\r\n    p35: 35%,\r\n    p40: 40%,\r\n    p45: 45%,\r\n    p50: 50%,\r\n    p55: 55%,\r\n    p60: 60%,\r\n    p65: 65%,\r\n    p70: 70%,\r\n    p75: 75%,\r\n    p80: 80%,\r\n    p85: 85%,\r\n    p90: 90%,\r\n    p95: 95%,\r\n    p100: 100%,\r\n), $columns);\r\n\r\n//\r\n// Internals\r\n//\r\n//\r\n\r\n///\r\n$lengths-absolute:(cm, mm, in, px, pt, pc);\r\n///\r\n$lengths-relative:(em, ex, ch, rem, vw, vh, vmin, vmax, '%');\r\n///\r\n$lengths:join($lengths-absolute, $lengths-relative);\r\n","pre[class*=language-] {\r\n    color:var(--color-contrast);\r\n    font-weight:var(--font-weight-normal);\r\n}\r\n\r\n.token.comment,\r\n.token.prolog,\r\n.token.doctype,\r\n.token.cdata {\r\n    color:slategray;\r\n}\r\n\r\n.token.punctuation {\r\n    color:var(--color-contrast);\r\n}\r\n\r\n.namespace {\r\n    opacity:0.7;\r\n}\r\n\r\n.token.property,\r\n.token.tag,\r\n.token.boolean,\r\n.token.number,\r\n.token.constant,\r\n.token.symbol,\r\n.token.deleted {\r\n    color:#990055;\r\n}\r\n\r\n.token.selector,\r\n.token.attr-name,\r\n.token.string,\r\n.token.char,\r\n.token.builtin,\r\n.token.inserted {\r\n    color:#669900;\r\n}\r\n\r\n.token.operator,\r\n.token.entity,\r\n.token.url,\r\n.language-css .token.string,\r\n.style .token.string {\r\n    background:hsla(0, 0%, 100%, 0.5);\r\n    color:#9a6e3a;\r\n}\r\n\r\n.token.atrule,\r\n.token.attr-value,\r\n.token.keyword {\r\n    color:#0077aa;\r\n}\r\n\r\n.token.function,\r\n.token.class-name {\r\n    color:#dd4a68;\r\n}\r\n\r\n.token.regex,\r\n.token.important,\r\n.token.variable {\r\n    color:#ee9900;\r\n}\r\n\r\n.token.important,\r\n.token.bold {\r\n    font-weight:bold;\r\n}\r\n\r\n.token.italic {\r\n    font-style:italic;\r\n}\r\n\r\n.token.entity {\r\n    cursor:help;\r\n}\r\n"]}